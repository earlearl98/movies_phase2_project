{"ast":null,"code":"var _jsxFileName = \"/home/earl/Development/code/phase2/movies_phase2_project/src/components/MovieList.js\",\n  _s = $RefreshSig$();\nimport Movie from './Movie';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieList() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [onChange, setOnchange] = useState(false);\n\n  // Fetch movies data from API and store it in the state variable \"movies\"\n  function handleOnClick(bt) {\n    if (movieFav.filter(el => el.id === bt.id).length === 0) {\n      setMovieFav([...movieFav, bt]);\n    }\n  }\n  function removeMovie(id) {\n    setMovies(movies.filter(movie => movie.id !== id));\n    fetch(`https://movies-app-4lwq.onrender.com/movies/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }\n  useEffect(() => {\n    setIsLoading(true);\n    fetch('https://movies-app-4lwq.onrender.com/movies').then(response => response.json()) // Parse the JSON response\n    .then(data => {\n      setMovies(data);\n      setIsLoading(false);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, [onChange]); // The empty dependency array ensures the effect runs once after the initial render\n\n  const newArray = [];\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container row mx-auto p-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MovieList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container col-md-3\",\n      children: [movies.length < 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"alert alert warning\",\n        children: \"No movies to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 28\n      }, this), movies.map(movie => {\n        const {\n          id,\n          title,\n          overview\n        } = movie;\n        console.log(newArray);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleOnClick(movie),\n            children: /*#__PURE__*/_jsxDEV(Movie, {\n              movie: movie,\n              movieFav: movieFav,\n              setMovieFav: setMovieFav\n            }, movie.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-1 \",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger \",\n              onClick: () => removeMovie(movie.id),\n              children: \"DELETE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n// import Movie from './Movie';\n// import React, { useState, useEffect } from 'react';\n\n// export default function MovieList({movieFav,setMovieFav}) {\n//   const [movies, setMovies] = useState([]);\n\n//   const [isLoading,setIsLoading ] = useState(true)\n//   // Fetch movies data from API and store it in the state variable \"movies\"\n//   function handleOnClick(bt){\n//     if (movieFav.filter(el=>el.id===bt.id).length === 0){\n//       setMovieFav([...movieFav,bt])\n//     }\n//   }\n\n//   function removeMovie(id) {\n//     setMovies(movies.filter(movie=>movie.id !== id))\n//     fetch(`https://movies-app-4lwq.onrender.com/movies/${id}`,{ \n//       method: \"DELETE\",\n//       headers:{ \n//         \"Content-Type\": \"application/json\"\n//       }\n//     })\n\n//   }\n\n//   useEffect(() => { \n//     setIsLoading(true)\n//     fetch('https://movies-app-4lwq.onrender.com/movies')\n//     .then(response => response.json()) // Parse the JSON response\n//     .then(data => {\n//       setMovies(data);\n\n//       setIsLoading(false)\n//     })\n//     .catch(error => console.error('Error fetching data:', error));\n//   }, []); // The empty dependency array ensures the effect runs once after the initial render\n\n//   const newArray=[]\n\n//   if (isLoading){\n//     return <h1>\n//       loading...</h1>\n//   }\n//   return (\n//     <div className='container row mx-auto p-2'>\n//       <h1>MovieList</h1>\n\n//       <div className='movie-container col-md-3'>\n//         {movies.map(movie=> {\n//           const {id,title,overview}= movie \n\n//           console.log(newArray);\n//           return (\n//             <div className='p-3 '>\n\n//               <div onClick={()=>handleOnClick(movie)} >\n//               <Movie key={movie.id} movie={movie}\n//               movieFav={movieFav} setMovieFav={setMovieFav}/>\n//               </div>\n\n//               <div className='card p-1 '>\n//               <button className='btn btn-danger 'onClick={()=>removeMovie(movie.id)}>DELETE</button>\n//               </div>\n\n//             </div>\n//         )\n//           })}\n//       <div/>  \n//       </div>\n//   </div>\n//   );\n//         }\n_s(MovieList, \"T3vqryQEnDSmQU7GPJpe1Gz48DQ=\");\n_c = MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["Movie","React","useState","useEffect","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","isLoading","setIsLoading","onChange","setOnchange","handleOnClick","bt","movieFav","filter","el","id","length","setMovieFav","removeMovie","movie","fetch","method","headers","then","response","json","data","catch","error","console","newArray","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","title","overview","log","onClick","_c","$RefreshReg$"],"sources":["/home/earl/Development/code/phase2/movies_phase2_project/src/components/MovieList.js"],"sourcesContent":["\nimport Movie from './Movie';\nimport React, { useState, useEffect } from 'react';\n\nexport default function MovieList() {\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading,setIsLoading ] = useState(true)\n  const [onChange, setOnchange] =useState(false)\n\n  // Fetch movies data from API and store it in the state variable \"movies\"\n  function handleOnClick(bt){\n    if (movieFav.filter(el=>el.id===bt.id).length === 0){\n      setMovieFav([...movieFav,bt])\n    }\n  }\n\n  function removeMovie(id) {\n    setMovies(movies.filter(movie=>movie.id !== id))\n    fetch(`https://movies-app-4lwq.onrender.com/movies/${id}`,{ \n      method: \"DELETE\",\n      headers:{ \n        \"Content-Type\": \"application/json\"\n      }\n    })\n    \n  }\n\n  useEffect(() => { \n    setIsLoading(true)\n    fetch('https://movies-app-4lwq.onrender.com/movies')\n    .then(response => response.json()) // Parse the JSON response\n    .then(data => {\n      setMovies(data);\n      \n      setIsLoading(false)\n    })\n    .catch(error => console.error('Error fetching data:', error));\n  }, [onChange]); // The empty dependency array ensures the effect runs once after the initial render\n\n  const newArray=[]\n\n  if (isLoading){\n    return <h1>\n      loading...</h1>\n  }\n  return (\n    <div className='container row mx-auto p-2'>\n      \n      <h1>MovieList</h1>\n\n      <div className='movie-container col-md-3'>\n\n      {\n        movies.length<1 && <p className='alert alert warning'>No movies to display</p>\n      }\n\n\n\n        {\n        movies.map(movie=> {\n          const {id,title,overview}= movie \n          \n\n          console.log(newArray);\n          return (\n            <div className='p-3 '>\n              \n              <div onClick={()=>handleOnClick(movie)} >\n              <Movie key={movie.id} movie={movie}\n              movieFav={movieFav} setMovieFav={setMovieFav}/>\n              </div>\n\n              <div className='card p-1 '>\n              <button className='btn btn-danger 'onClick={()=>removeMovie(movie.id)}>DELETE</button>\n              </div>\n\n            </div>\n        )\n          })}\n      <div/>  \n      </div>\n  </div>\n  );\n        }\n\n\n\n\n// import Movie from './Movie';\n// import React, { useState, useEffect } from 'react';\n\n// export default function MovieList({movieFav,setMovieFav}) {\n//   const [movies, setMovies] = useState([]);\n\n//   const [isLoading,setIsLoading ] = useState(true)\n//   // Fetch movies data from API and store it in the state variable \"movies\"\n//   function handleOnClick(bt){\n//     if (movieFav.filter(el=>el.id===bt.id).length === 0){\n//       setMovieFav([...movieFav,bt])\n//     }\n//   }\n\n//   function removeMovie(id) {\n//     setMovies(movies.filter(movie=>movie.id !== id))\n//     fetch(`https://movies-app-4lwq.onrender.com/movies/${id}`,{ \n//       method: \"DELETE\",\n//       headers:{ \n//         \"Content-Type\": \"application/json\"\n//       }\n//     })\n    \n//   }\n\n//   useEffect(() => { \n//     setIsLoading(true)\n//     fetch('https://movies-app-4lwq.onrender.com/movies')\n//     .then(response => response.json()) // Parse the JSON response\n//     .then(data => {\n//       setMovies(data);\n      \n//       setIsLoading(false)\n//     })\n//     .catch(error => console.error('Error fetching data:', error));\n//   }, []); // The empty dependency array ensures the effect runs once after the initial render\n\n//   const newArray=[]\n\n//   if (isLoading){\n//     return <h1>\n//       loading...</h1>\n//   }\n//   return (\n//     <div className='container row mx-auto p-2'>\n//       <h1>MovieList</h1>\n\n//       <div className='movie-container col-md-3'>\n//         {movies.map(movie=> {\n//           const {id,title,overview}= movie \n          \n\n//           console.log(newArray);\n//           return (\n//             <div className='p-3 '>\n              \n//               <div onClick={()=>handleOnClick(movie)} >\n//               <Movie key={movie.id} movie={movie}\n//               movieFav={movieFav} setMovieFav={setMovieFav}/>\n//               </div>\n\n//               <div className='card p-1 '>\n//               <button className='btn btn-danger 'onClick={()=>removeMovie(movie.id)}>DELETE</button>\n//               </div>\n\n//             </div>\n//         )\n//           })}\n//       <div/>  \n//       </div>\n//   </div>\n//   );\n//         }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}