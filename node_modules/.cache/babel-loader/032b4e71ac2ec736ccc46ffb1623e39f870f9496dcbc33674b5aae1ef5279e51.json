{"ast":null,"code":"var _jsxFileName = \"/home/earl/Development/code/phase2/movies_phase2_project/src/components/MovieList.js\",\n  _s = $RefreshSig$();\nimport Movie from './Movie';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieList() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [onChange, setOnchange] = useState(false);\n\n  // Fetch movies data from API and store it in the state variable \"movies\"\n\n  // function handleOnClick(bt){\n  //   if (movieFav.filter(el=>el.id===bt.id).length === 0){\n  //     setMovieFav([...movieFav,bt])\n  //   }\n  // }\n\n  // function removeMovie(id) {\n  //   setMovies(movies.filter(movie=>movie.id !== id))\n  //   fetch(`https://movies-app-4lwq.onrender.com/movies/${id}`,{ \n  //     method: \"DELETE\",\n  //     headers:{ \n  //       \"Content-Type\": \"application/json\"\n  //     }\n  //   })\n\n  // }\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch('https://movies-app-4lwq.onrender.com/movies').then(response => response.json()) // Parse the JSON response\n    .then(data => {\n      setMovies(data);\n      setIsLoading(false);\n    }).catch(error => console.error('Error fetching data:', error));\n  }, [onChange]); // The empty dependency array ensures the effect runs once after the initial render\n\n  // const newArray=[]\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container row mx-auto p-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MovieList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-container col-md-3\",\n      children: [movies.length < 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"alert alert warning\",\n        children: \"No movies to display\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 28\n      }, this), movies && movies.map(movie => {\n        /*#__PURE__*/_jsxDEV(Movie, {\n          movie: movie,\n          onChange: onChange,\n          setOnchange: setOnchange\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieList, \"T3vqryQEnDSmQU7GPJpe1Gz48DQ=\");\n_c = MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["Movie","React","useState","useEffect","jsxDEV","_jsxDEV","MovieList","_s","movies","setMovies","isLoading","setIsLoading","onChange","setOnchange","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","movie","id","_c","$RefreshReg$"],"sources":["/home/earl/Development/code/phase2/movies_phase2_project/src/components/MovieList.js"],"sourcesContent":["\nimport Movie from './Movie';\nimport React, { useState, useEffect } from 'react';\n\nexport default function MovieList() {\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading,setIsLoading ] = useState(true)\n  const [onChange, setOnchange] =useState(false)\n\n  // Fetch movies data from API and store it in the state variable \"movies\"\n\n  // function handleOnClick(bt){\n  //   if (movieFav.filter(el=>el.id===bt.id).length === 0){\n  //     setMovieFav([...movieFav,bt])\n  //   }\n  // }\n\n  // function removeMovie(id) {\n  //   setMovies(movies.filter(movie=>movie.id !== id))\n  //   fetch(`https://movies-app-4lwq.onrender.com/movies/${id}`,{ \n  //     method: \"DELETE\",\n  //     headers:{ \n  //       \"Content-Type\": \"application/json\"\n  //     }\n  //   })\n    \n  // }\n\n  useEffect(() => { \n    setIsLoading(true)\n    fetch('https://movies-app-4lwq.onrender.com/movies')\n    .then((response) => response.json()) // Parse the JSON response\n    .then(data => {\n      setMovies(data);\n      \n      setIsLoading(false)\n    })\n    .catch(error => console.error('Error fetching data:', error));\n  }, [onChange]); // The empty dependency array ensures the effect runs once after the initial render\n\n  // const newArray=[]\n\n  if (isLoading){\n    return <h1>\n      loading...</h1>\n  }\n  return (\n    <div className='container row mx-auto p-2'>\n      \n      <h1>MovieList</h1>\n\n      <div className='movie-container col-md-3'>\n\n      {\n        movies.length<1 && <p className='alert alert warning'>No movies to display</p>\n      }\n\n        {\n        movies && movies.map((movie)=> {\n          <Movie  key={movie.id} movie={movie}\n                onChange={onChange} setOnchange={setOnchange} /> \n        })\n      }\n              \n      \n      </div>  \n      \n  </div>\n  );\n        }\n\n\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAElC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,SAAS,EAACC,YAAY,CAAE,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAEX,QAAQ,CAAC,KAAK,CAAC;;EAE9C;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEAC,SAAS,CAAC,MAAM;IACdQ,YAAY,CAAC,IAAI,CAAC;IAClBG,KAAK,CAAC,6CAA6C,CAAC,CACnDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,CACpCF,IAAI,CAACG,IAAI,IAAI;MACZT,SAAS,CAACS,IAAI,CAAC;MAEfP,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EAC/D,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEhB;;EAEA,IAAIF,SAAS,EAAC;IACZ,oBAAOL,OAAA;MAAAiB,QAAA,EAAI;IACC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACnB;EACA,oBACErB,OAAA;IAAKsB,SAAS,EAAC,2BAA2B;IAAAL,QAAA,gBAExCjB,OAAA;MAAAiB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAElBrB,OAAA;MAAKsB,SAAS,EAAC,0BAA0B;MAAAL,QAAA,GAGvCd,MAAM,CAACoB,MAAM,GAAC,CAAC,iBAAIvB,OAAA;QAAGsB,SAAS,EAAC,qBAAqB;QAAAL,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAI9ElB,MAAM,IAAIA,MAAM,CAACqB,GAAG,CAAEC,KAAK,IAAI;QAC7B,aAAAzB,OAAA,CAACL,KAAK;UAAiB8B,KAAK,EAAEA,KAAM;UAC9BlB,QAAQ,EAAEA,QAAS;UAACC,WAAW,EAAEA;QAAY,GADtCiB,KAAK,CAACC,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACgC,CAAC;MACxD,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEA;AAACnB,EAAA,CAlEeD,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}